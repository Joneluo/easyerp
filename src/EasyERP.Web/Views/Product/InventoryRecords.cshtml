@using EasyErp.Core.Configuration.Settings
@using EasyErp.Core.Infrastructure
@model EasyERP.Web.Models.Products.ProductListModel
@section SectionTitle
{
    <h1 id="crmTitle">
    <strong>产品入库记录</strong> 
</h1>
}
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<AreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<AreaSettings>().GridPageSizes;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row m-b">
        <div class="form-group col-md-3">
            @Html.ValidationMessageFor(m => m.SearchProductName, "", new
        {
            @class = "text-danger"
        })
            @Html.LabelFor(m => m.SearchProductName)
            @Html.TextBoxFor(model => model.SearchProductName, new
        {
            id = "search-product-name"
        })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(m => m.SearchCategoryId)
            @Html.DropDownList("SearchCategoryId", Model.AvailableCategories, new
        {
            id = "selected-category",
            @onchange = "var grid = $(\"#products-grid\").data(\"kendoGrid\"); grid.dataSource.page(1);"
        })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(m => m.SearchStoreId)
            @Html.DropDownList("SearchStoreId", Model.AvailableStores, new
        {
            id = "selected-store",
            @onchange = "var grid = $(\"#products-grid\").data(\"kendoGrid\"); grid.dataSource.page(1);"
        })
        </div>
    </div>
    <div class="option">
        <input type="checkbox" id="showUnPaidOnly" value="true">只显示未付款信息
    </div>
    <div id="inventory-list"></div>
    <script type="text/javascript">
        $(document).ready(function() {

            var inventoryDataSource = new kendo.data.DataSource({
                schema: {
                    data: function(data) {
                        return data.Data;
                    },
                    model: {
                        fields: {
                            "InventoryTime": { type: "date" }
                        }
                    }
                },
                transport: {
                    read: {
                        url: "/Product/InventoryRecords",
                        type: "POST",
                        dataType: "json",
                        data: function() {
                            var data = {
                                productId: $("#selected-product").val(),
                                showUnPaidOnly: $("#showUnPaidOnly").is(":checked")
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                    }
                }
            });

            var inventoryGrid = $("#inventory-list").kendoGrid({
                dataSource: inventoryDataSource,
                columns: [
                    { field: "ProductName", title: "产品名", width: 100 },
                    { field: "Quantity", title: "数量", width: 100 },
                    { field: "InventoryTime", title: "入库日期", width: 100, template: '#= kendo.toString(InventoryTime, "MM/dd/yyyy" ) #' },
                    { field: "PaymentId", title: "付款信息", width: 100, template: "<a href=\"/Payment/PayInfo/#=PaymentId#\"># if(PaymentId == 0) {#无付款信息#} else if(IsPaid) {#已付全款#;} else{#部分付款#} #</a>" }
                ]
            }).data("kendoGrid");
        });
    </script>
}